rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             resource.data != null &&
             request.auth.token.get('role', '') == 'admin';
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    // Public collections (read-only for non-admins)
    match /members/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /projects/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /events/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Applications - users can create and read their own, admins can read/write all
    match /applications/{document} {
      allow create: if isAuthenticated() && request.auth.uid == resource.data.uid;
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    // Profiles - private, only owner and admins can access
    match /profiles/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
      allow create, delete: if isAdmin();
    }
    
    // Payments - readable by owner or admin, no client writes
    match /payments/{document} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow write: if false; // Only server/webhooks can write
    }
    
    // Reports - admin only
    match /reports/{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Only server functions can write
    }
    
    // Media metadata
    match /media/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
