rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.get('role', '') == 'admin';
    }
    
    // Public read access, admin-only write access
    match /uploads/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User-specific uploads (for evidence/receipts)
    match /user-uploads/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Profile pictures - users can upload their own, everyone can read
    match /profilePictures/{allPaths=**} {
      allow read: if true; // Public read access for profile pictures
      allow write: if isAuthenticated(); // Any authenticated user can upload
    }
  }
}




